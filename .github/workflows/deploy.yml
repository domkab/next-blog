name: CI/CD Pipeline

on:
  push:
    branches:
      - vps-fixes
      - main

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 3.1 Create necessary upload folders (fix ENOENT errors)
      - name: Prepare upload folders
        run: |
          mkdir -p public/uploads/posts
          mkdir -p public/uploads/featured-posts
          mkdir -p public/uploads/logo-slider

      # 4. Run lint (active) and placeholder tests (future-proof)
      - name: Run lint and placeholder tests
        run: |
          npm run lint
          echo "No tests yet - placeholder for future test suite"

      # 5. Build project
      - name: Build project
        run: npm run build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_DBNAME: ${{ secrets.MONGODB_DBNAME }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

      # 6. Deploy build artifacts to VPS
      - name: Deploy to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: ".next/ package.json package-lock.json public/"
          target: "/home/deploy/gargofx"

      # 7. Restart PM2 (zero downtime reload)
      - name: Restart PM2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/deploy/gargofx
            npm install --production
            pm2 reload gargofx || pm2 start npm --name "gargofx" -- run start
            pm2 save